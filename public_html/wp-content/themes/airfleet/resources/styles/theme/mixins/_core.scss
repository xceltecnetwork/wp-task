// IE10+ selector. See http://browserhacks.com/
@mixin ie-gte-10 {
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    @content;
  }
}

// Headings selector (target all headings).
@mixin headings() {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  .h1,
  .h2,
  .h3,
  .h4,
  .h5,
  .h6,
  .heading,
  .title,
  .c-title,
  .subtitle {
    @content;
  }
}

// Set horizontal padding.
@mixin padding-x($value) {
  padding-left: $value;
  padding-right: $value;
}

// Set vertical padding.
@mixin padding-y($value) {
  padding-bottom: $value;
  padding-top: $value;
}

// Set horizontal margin.
@mixin margin-x($value) {
  margin-left: $value;
  margin-right: $value;
}

// Set vertical margin.
@mixin margin-y($value) {
  margin-bottom: $value;
  margin-top: $value;
}

// Set font size and line height.
@mixin font-size-line-height($font-size, $line-height) {
  font-size: px-to-rem($font-size);
  line-height: ($line-height / $font-size);
}

// Set width and height of the same size.
@mixin width-height($size) {
  height: $size;
  width: $size;
}

// Column selector.
@mixin col() {
  .col,
  [class*='col-'] {
    @content;
  }
}

// Change grid's gutter.
@mixin gutter($padding) {
  @include col {
    @include padding-x($padding);
  }

  .container {
    @include padding-x($padding);
  }

  .row {
    @include margin-x(-$padding);
  }
}

// Set column width.
@mixin col-width($width) {
  flex: 0 0 $width;
  max-width: $width;
}

// Remove the default select appearance.
@mixin remove-select-appearance() {
  appearance: none;
  border: 0;

  &::-ms-expand {
    display: none;
  }

  &:focus {
    outline: 0;
  }
}

// Display a list as inline.
@mixin list-inline($li-margin-right: $list-inline-padding) {
  @include list-unstyled();

  li {
    display: inline-block;

    &:not(:last-child) {
      margin-right: $li-margin-right;
    }
  }
}

// Set image as background cover.
@mixin cover($url, $position: center center) {
  background-image: url($url);
  background-position: $position;
  background-repeat: no-repeat;
  background-size: cover;
}

// Position the element and fill its parent.
@mixin position-fill($position: absolute) {
  height: 100%;
  left: 0;
  position: $position;
  top: 0;
  width: 100%;
}

// Position the element absolutely centered.
@mixin position-absolute-center() {
  left: 50%;
  position: absolute;
  top: 50%;
  transform: translateX(-50%) translateY(-50%);
}

// Similar to Bootstrap's fixed top, but with optional position.
@mixin position-top($position, $zindex: $zindex-fixed) {
  left: 0;
  position: $position;
  right: 0;
  top: 0;
  z-index: $zindex;
}

// Render a circle.
@mixin circle($width, $background-color: '') {
  @include width-height($width);
  border-radius: 100%;

  @if $background-color != '' {
    background-color: $background-color;
  }
}

// Set the top property after the admin bar if it's present.
@mixin top-after-admin-bar($offset: 0, $mobile-offset: 0) {
  .admin-bar & {
    top: 32px + $offset;

    @media screen and (max-width: 782px) {
      top: 46px + $mobile-offset;
    }
  }
}

// Background support for elements that use the background component.
@mixin background-support {
  position: relative;

  > .container {
    position: relative;
  }
}

// Target the next block.
// If it's a wrapper block, it will target the first block inside.
@mixin next-block() {
  /* stylelint-disable-next-line */
  + .c-block:not(.c-block-wrapper),
  + .c-block-wrapper > .c-background + .c-block {
    @content;
  }
}
