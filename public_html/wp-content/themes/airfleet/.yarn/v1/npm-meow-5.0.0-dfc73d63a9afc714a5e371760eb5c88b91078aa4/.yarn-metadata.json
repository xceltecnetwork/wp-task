{
  "manifest": {
    "name": "meow",
    "version": "5.0.0",
    "description": "CLI app helper",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/meow.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=6"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "cli",
      "bin",
      "util",
      "utility",
      "helper",
      "argv",
      "command",
      "line",
      "meow",
      "cat",
      "kitten",
      "parser",
      "option",
      "flags",
      "input",
      "cmd",
      "console"
    ],
    "dependencies": {
      "camelcase-keys": "^4.0.0",
      "decamelize-keys": "^1.0.0",
      "loud-rejection": "^1.0.0",
      "minimist-options": "^3.0.1",
      "normalize-package-data": "^2.3.4",
      "read-pkg-up": "^3.0.0",
      "redent": "^2.0.0",
      "trim-newlines": "^2.0.0",
      "yargs-parser": "^10.0.0"
    },
    "devDependencies": {
      "ava": "*",
      "execa": "^0.10.0",
      "indent-string": "^3.0.0",
      "xo": "*"
    },
    "xo": {
      "rules": {
        "unicorn/no-process-exit": "off"
      }
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-meow-5.0.0-dfc73d63a9afc714a5e371760eb5c88b91078aa4/package.json",
    "readmeFilename": "readme.md",
    "readme": "# meow [![Build Status](https://travis-ci.org/sindresorhus/meow.svg?branch=master)](https://travis-ci.org/sindresorhus/meow)\n\n> CLI app helper\n\n![](meow.gif)\n\n\n## Features\n\n- Parses arguments\n- Converts flags to [camelCase](https://github.com/sindresorhus/camelcase)\n- Outputs version when `--version`\n- Outputs description and supplied help text when `--help`\n- Makes unhandled rejected promises [fail loudly](https://github.com/sindresorhus/loud-rejection) instead of the default silent fail\n- Sets the process title to the binary name defined in package.json\n\n\n## Install\n\n```\n$ npm install meow\n```\n\n\n## Usage\n\n```\n$ ./foo-app.js unicorns --rainbow\n```\n\n```js\n#!/usr/bin/env node\n'use strict';\nconst meow = require('meow');\nconst foo = require('.');\n\nconst cli = meow(`\n\tUsage\n\t  $ foo <input>\n\n\tOptions\n\t  --rainbow, -r  Include a rainbow\n\n\tExamples\n\t  $ foo unicorns --rainbow\n\t  ðŸŒˆ unicorns ðŸŒˆ\n`, {\n\tflags: {\n\t\trainbow: {\n\t\t\ttype: 'boolean',\n\t\t\talias: 'r'\n\t\t}\n\t}\n});\n/*\n{\n\tinput: ['unicorns'],\n\tflags: {rainbow: true},\n\t...\n}\n*/\n\nfoo(cli.input[0], cli.flags);\n```\n\n\n## API\n\n### meow(options, [minimistOptions])\n\nReturns an `Object` with:\n\n- `input` *(Array)* - Non-flag arguments\n- `flags` *(Object)* - Flags converted to camelCase\n- `pkg` *(Object)* - The `package.json` object\n- `help` *(string)* - The help text used with `--help`\n- `showHelp([code=2])` *(Function)* - Show the help text and exit with `code`\n- `showVersion()` *(Function)* - Show the version text and exit\n\n#### options\n\nType: `Object` `Array` `string`\n\nCan either be a string/array that is the `help` or an options object.\n\n##### flags\n\nType: `Object`\n\nDefine argument flags.\n\nThe key is the flag name and the value is an object with any of:\n\n- `type`: Type of value. (Possible values: `string` `boolean`)\n- `alias`: Usually used to define a short flag alias.\n- `default`: Default value when the flag is not specified.\n\nExample:\n\n```js\nflags: {\n\tunicorn: {\n\t\ttype: 'string',\n\t\talias: 'u',\n\t\tdefault: 'rainbow'\n\t}\n}\n```\n\n\n##### description\n\nType: `string` `boolean`<br>\nDefault: The package.json `\"description\"` property\n\nDescription to show above the help text.\n\nSet it to `false` to disable it altogether.\n\n##### help\n\nType: `string` `boolean`\n\nThe help text you want shown.\n\nThe input is reindented and starting/ending newlines are trimmed which means you can use a [template literal](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/template_strings) without having to care about using the correct amount of indent.\n\nThe description will be shown above your help text automatically.\n\n##### version\n\nType: `string` `boolean`<br>\nDefault: The package.json `\"version\"` property\n\nSet a custom version output.\n\n##### autoHelp\n\nType: `boolean`<br>\nDefault: `true`\n\nAutomatically show the help text when the `--help` flag is present. Useful to set this value to `false` when a CLI manages child CLIs with their own help text.\n\n##### autoVersion\n\nType: `boolean`<br>\nDefault: `true`\n\nAutomatically show the version text when the `--version` flag is present. Useful to set this value to `false` when a CLI manages child CLIs with their own version text.\n\n##### pkg\n\nType: `Object`<br>\nDefault: Closest package.json upwards\n\npackage.json as an `Object`.\n\n*You most likely don't need this option.*\n\n##### argv\n\nType: `Array`<br>\nDefault: `process.argv.slice(2)`\n\nCustom arguments object.\n\n##### inferType\n\nType: `boolean`<br>\nDefault: `false`\n\nInfer the argument type.\n\nBy default, the argument `5` in `$ foo 5` becomes a string. Enabling this would infer it as a number.\n\n##### booleanDefault\n\nType: `boolean` `null` `undefined`<br>\nDefault: `false`\n\nValue of `boolean` flags not defined in `argv`.\nIf set to `undefined` the flags not defined in `argv` will be excluded from the result.\nThe `default` value set in `boolean` flags take precedence over `booleanDefault`.\n\nExample:\n\n```js\nconst cli = meow(`\n\tUsage\n\t  $ foo\n\n\tOptions\n\t  --rainbow, -r  Include a rainbow\n\t  --unicorn, -r  Include a unicorn\n\n\tExamples\n\t  $ foo\n\t  ðŸŒˆ unicorns ðŸŒˆ\n`, {\n\tbooleanDefault: undefined,\n\tflags: {\n\t\trainbow: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t\talias: 'r'\n\t\t},\n\t\tunicorn: {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: false\n\t\t\talias: 'u'\n\t\t},\n\t\tcake: {\n\t\t\ttype: 'boolean',\n\t\t\talias: 'c'\n\t\t}\n\t}\n});\n/*\n{\n\tflags: {rainbow: true, unicorn: false},\n\tâ€¦\n}\n*/\n```\n\n## Promises\n\nMeow will make unhandled rejected promises [fail loudly](https://github.com/sindresorhus/loud-rejection) instead of the default silent fail. Meaning you don't have to manually `.catch()` promises used in your CLI.\n\n\n## Tips\n\nSee [`chalk`](https://github.com/chalk/chalk) if you want to colorize the terminal output.\n\nSee [`get-stdin`](https://github.com/sindresorhus/get-stdin) if you want to accept input from stdin.\n\nSee [`conf`](https://github.com/sindresorhus/conf) if you need to persist some data.\n\nSee [`update-notifier`](https://github.com/yeoman/update-notifier) if you want update notifications.\n\n[More useful CLI utilitiesâ€¦](https://github.com/sindresorhus/awesome-nodejs#command-line-utilities)\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/meow/-/meow-5.0.0.tgz#dfc73d63a9afc714a5e371760eb5c88b91078aa4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/meow/-/meow-5.0.0.tgz",
    "hash": "dfc73d63a9afc714a5e371760eb5c88b91078aa4",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "dfc73d63a9afc714a5e371760eb5c88b91078aa4"
}