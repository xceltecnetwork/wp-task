{
  "manifest": {
    "name": "stream-throttle",
    "description": "A rate limiter for Node.js streams.",
    "version": "0.1.3",
    "author": {
      "name": "Tiago Quelhas",
      "email": "tiagoq@gmail.com"
    },
    "license": "BSD-3-Clause",
    "keywords": [
      "streams",
      "throttling",
      "ratelimit"
    ],
    "engines": {
      "node": ">= 0.10.0"
    },
    "repository": {
      "type": "git",
      "url": "http://github.com/tjgq/node-stream-throttle.git"
    },
    "main": "./index.js",
    "scripts": {
      "test": "nodeunit test"
    },
    "bin": {
      "throttleproxy": "./bin/throttleproxy.js"
    },
    "dependencies": {
      "commander": "^2.2.0",
      "limiter": "^1.0.5"
    },
    "devDependencies": {
      "async": "^0.6.2"
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-stream-throttle-0.1.3-add57c8d7cc73a81630d31cd55d3961cfafba9c3/package.json",
    "contributors": [
      {
        "name": "Tiago Quelhas",
        "email": "tiagoq@gmail.com"
      }
    ],
    "readmeFilename": "README.md",
    "readme": "# stream-throttle #\n\nA rate limiter for Node.js streams.\n\n## API usage\n\nThis module exports two classes, `Throttle` and `ThrottleGroup`.\n\n`Throttle` creates a single throttled stream, based on `stream.Transform`. It accepts an `opts` parameter with the following keys:\n\n* `opts.rate` is the throttling rate, in bytes per second.\n* `opts.chunksize` (optional) is the maximum chunk size into which larger writes are decomposed; the default is `opts.rate`/10.\n\nThe `opts` object may also contain options to be passed to the `stream.Transform` constructor.\n\nFor example, the following code throttles stdin to stdout at 10 bytes per second:\n\n    process.stdin.pipe(new Throttle({rate: 10})).pipe(process.stdout)\n\n`ThrottleGroup` allows the creation of a group of streams whose aggregate bandwidth is throttled. The constructor accepts the same `opts` argument as for `Throttle`. Call `throttle` on a `ThrottleGroup` object to create a new throttled stream belonging to the group.\n\nFor example, the following code creates two HTTP connections to `www.google.com:80`, and throttles their aggregate (downstream) bandwidth to 10 KB/s:\n\n    var addr = { host: 'www.google.com', port: 80 };\n    var tg = new ThrottleGroup({rate: 10240});\n\n    var conn1 = net.createConnection(addr),\n        conn2 = net.createConnection(addr);\n\n    var thr1 = conn1.pipe(tg.throttle()),\n        thr2 = conn2.pipe(tg.throttle());\n\n    // Reads from thr1 and thr2 are throttled to 10 KB/s in aggregate\n\n## Command line usage\n\nThis package installs a `throttleproxy` binary which implements a command-line utility for throttling connections. Run `throttleproxy -h` for instructions.\n\n## Contributing\n\nFeel free to open an issue or send a pull request.\n\n## License\n\nBSD-style. See the LICENSE file.\n\n## Author\n\nCopyright Â© 2013 Tiago Quelhas. Contact me at `<tiagoq@gmail.com>`.\n",
    "licenseText": "Copyright (c) 2013 Tiago Quelhas. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n   * Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n\n   * Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in the\n     documentation and/or other materials provided with the distribution.\n\n   * The names of the authors and contributors may not be used to endorse or\n     promote products derived from this software without specific prior\n     written permission.\n\nTHIS SOFTWARE IS PROVIDED \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\nOR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stream-throttle/-/stream-throttle-0.1.3.tgz#add57c8d7cc73a81630d31cd55d3961cfafba9c3",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stream-throttle/-/stream-throttle-0.1.3.tgz",
    "hash": "add57c8d7cc73a81630d31cd55d3961cfafba9c3",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "add57c8d7cc73a81630d31cd55d3961cfafba9c3"
}