{
  "manifest": {
    "name": "postcss-jsx",
    "version": "0.36.1",
    "description": "PostCSS syntax for parsing CSS in JS literals",
    "repository": {
      "type": "git",
      "url": "git+https://github.com/gucong3000/postcss-jsx.git"
    },
    "keywords": [
      "postcss",
      "syntax",
      "emotion",
      "aphrodite",
      "glamor",
      "glamorous",
      "react-native",
      "react-style",
      "reactcss",
      "styled-components",
      "styletron-react",
      "typestyle",
      "css-in-js",
      "css"
    ],
    "author": {
      "name": "gucong3000"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/gucong3000/postcss-jsx/issues"
    },
    "homepage": "https://github.com/gucong3000/postcss-jsx#readme",
    "nyc": {
      "reporter": [
        "lcov",
        "text"
      ],
      "all": true,
      "cache": true,
      "check-coverage": true
    },
    "scripts": {
      "mocha": "mocha --no-timeouts",
      "test": "nyc npm run mocha",
      "debug": "npm run mocha -- --inspect-brk"
    },
    "dependencies": {
      "@babel/core": ">=7.2.2"
    },
    "peerDependencies": {
      "postcss": ">=5.0.0",
      "postcss-syntax": ">=0.36.0"
    },
    "devDependencies": {
      "autoprefixer": "^9.4.4",
      "chai": "^4.2.0",
      "codecov": "^3.1.0",
      "json5": "^2.1.0",
      "mocha": "^5.2.0",
      "nyc": "^13.1.0",
      "postcss": "^7.0.7",
      "postcss-parser-tests": "^6.3.1",
      "postcss-safe-parser": "^4.0.1",
      "postcss-syntax": ">=0.36.0"
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-postcss-jsx-0.36.1-ab5e469e7449b84bd1a5973ff555fbe84c39f91d/package.json",
    "readmeFilename": "README.md",
    "readme": "PostCSS JSX Syntax\n====\n\n[![NPM version](https://img.shields.io/npm/v/postcss-jsx.svg?style=flat-square)](https://www.npmjs.com/package/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-jsx.svg)](https://travis-ci.org/gucong3000/postcss-jsx)\n[![Travis](https://img.shields.io/travis/gucong3000/postcss-syntaxes.svg?label=integration)](https://travis-ci.org/gucong3000/postcss-syntaxes)\n[![Codecov](https://img.shields.io/codecov/c/github/gucong3000/postcss-jsx.svg)](https://codecov.io/gh/gucong3000/postcss-jsx)\n[![David](https://img.shields.io/david/gucong3000/postcss-jsx.svg)](https://david-dm.org/gucong3000/postcss-jsx)\n\n<img align=\"right\" width=\"95\" height=\"95\"\n\ttitle=\"Philosopher’s stone, logo of PostCSS\"\n\tsrc=\"http://postcss.github.io/postcss/logo.svg\">\n\n[PostCSS](https://github.com/postcss/postcss) syntax for parsing [CSS in JS](https://github.com/MicheleBertoli/css-in-js) literals:\n\n- [aphrodite](https://github.com/Khan/aphrodite)\n- [astroturf](https://github.com/4Catalyzer/astroturf)\n- [csjs](https://github.com/rtsao/csjs)\n- [css-light](https://github.com/streamich/css-light)\n- [cssobj](https://github.com/cssobj/cssobj)\n- [electron-css](https://github.com/azukaar/electron-css)\n- [emotion](https://github.com/emotion-js/emotion)\n- [freestyler](https://github.com/streamich/freestyler)\n- [glamor](https://github.com/threepointone/glamor)\n- [glamorous](https://github.com/paypal/glamorous)\n- [j2c](https://github.com/j2css/j2c)\n- [linaria](https://github.com/callstack/linaria)\n- [lit-css](https://github.com/bashmish/lit-css)\n- [react-native](https://github.com/necolas/react-native-web)\n- [react-style](https://github.com/js-next/react-style)\n- [reactcss](https://github.com/casesandberg/reactcss)\n- [styled-components](https://github.com/styled-components/styled-components)\n- [styletron-react](https://github.com/rtsao/styletron)\n- [styling](https://github.com/andreypopp/styling)\n- [typestyle](https://github.com/typestyle/typestyle)\n\n## Getting Started\n\nFirst thing's first, install the module:\n\n```\nnpm install postcss-syntax postcss-jsx --save-dev\n```\n\n## Use Cases\n\n```js\nconst postcss = require('postcss');\nconst stylelint = require('stylelint');\nconst syntax = require('postcss-syntax');\npostcss([stylelint({ fix: true })]).process(source, { syntax: syntax }).then(function (result) {\n\t// An alias for the result.css property. Use it with syntaxes that generate non-CSS output.\n\tresult.content\n});\n```\n\ninput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tflexDirectionn: 'row',\n\tdisplay: 'inline-block',\n\tcolor: '#fff',\n});\n```\n\noutput:\n```javascript\nimport glm from 'glamorous';\nconst Component1 = glm.a({\n\tcolor: '#fff',\n\tdisplay: 'inline-block',\n\tflexDirectionn: 'row',\n});\n```\n\n## Advanced Use Cases\n\nAdd support for more `css-in-js` package:\n```js\nconst syntax = require('postcss-syntax')({\n\t\"i-css\": (index, namespace) => namespace[index + 1] === \"addStyles\",\n\t\"styled-components\": true,\n});\n```\n\nSee: [postcss-syntax](https://github.com/gucong3000/postcss-syntax)\n\n## Style Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations to CSS code in template literals & styles as object literals.\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 刘祺\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/postcss-jsx/-/postcss-jsx-0.36.1.tgz#ab5e469e7449b84bd1a5973ff555fbe84c39f91d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/postcss-jsx/-/postcss-jsx-0.36.1.tgz",
    "hash": "ab5e469e7449b84bd1a5973ff555fbe84c39f91d",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "ab5e469e7449b84bd1a5973ff555fbe84c39f91d"
}