{
  "manifest": {
    "name": "portscanner",
    "description": "Asynchronous port scanner for Node.js",
    "scripts": {
      "test": "ava",
      "lint": "standard"
    },
    "keywords": [
      "portscanner",
      "port",
      "scanner",
      "checker",
      "status"
    ],
    "version": "2.1.1",
    "preferGlobal": false,
    "homepage": "https://github.com/baalexander/node-portscanner",
    "author": {},
    "repository": {
      "type": "git",
      "url": "git://github.com/baalexander/node-portscanner.git"
    },
    "bugs": {
      "url": "https://github.com/baalexander/node-portscanner/issues"
    },
    "main": "./lib/portscanner.js",
    "dependencies": {
      "async": "1.5.2",
      "is-number-like": "^1.0.3"
    },
    "devDependencies": {
      "ava": "^0.4.2",
      "eslint": "^3.10.2",
      "eslint-config-standard": "^6.2.1",
      "standard": "^8.5.0"
    },
    "engines": {
      "node": ">=0.4",
      "npm": ">=1.0.0"
    },
    "license": "MIT",
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-portscanner-2.1.1-eabb409e4de24950f5a2a516d35ae769343fbb96/package.json",
    "readmeFilename": "README.md",
    "readme": "# portscanner\n\n[![npm](https://img.shields.io/npm/v/portscanner.svg)](https://www.npmjs.com/package/portscanner)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nThe portscanner module is\nan asynchronous JavaScript port scanner for Node.js.\n\nPortscanner can check a port,\nor range of ports,\nfor 'open' or 'closed' statuses.\n\n[Looking for maintainer](https://github.com/baalexander/node-portscanner/issues/25)!\n\n## Install\n\n```bash\nnpm install portscanner\n```\n\n## Usage\n\nA brief example:\n\n```javascript\nvar portscanner = require('portscanner')\n\n// Checks the status of a single port\nportscanner.checkPortStatus(3000, '127.0.0.1', function(error, status) {\n  // Status is 'open' if currently in use or 'closed' if available\n  console.log(status)\n})\n\n// Find the first available port. Asynchronously checks, so first port\n// determined as available is returned.\nportscanner.findAPortNotInUse(3000, 3010, '127.0.0.1', function(error, port) {\n  console.log('AVAILABLE PORT AT: ' + port)\n})\n\n// Find the first port in use or blocked. Asynchronously checks, so first port\n// to respond is returned.\nportscanner.findAPortInUse(3000, 3010, '127.0.0.1', function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// You can also pass array of ports to check\nportscanner.findAPortInUse([3000, 3005, 3006], '127.0.0.1', function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// And skip host param. Default is '127.0.0.1'\nportscanner.findAPortNotInUse(3000, 4000, function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// And use promises\nportscanner.findAPortNotInUse(3000, 4000).then(function(port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n```\n\nThe example directory contains a more detailed example.\n\n## Test\n\n```sh\nnpm test\n```\n\n## Future\n\nPlease create issues or pull requests\nfor port scanning related features\nyou'd like to see included.\n\n## License (MIT)\n\n[MIT](LICENSE)\n\n",
    "licenseText": "Copyright (c) 2011 Brandon Ace Alexander\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/portscanner/-/portscanner-2.1.1.tgz#eabb409e4de24950f5a2a516d35ae769343fbb96",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/portscanner/-/portscanner-2.1.1.tgz",
    "hash": "eabb409e4de24950f5a2a516d35ae769343fbb96",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "eabb409e4de24950f5a2a516d35ae769343fbb96"
}