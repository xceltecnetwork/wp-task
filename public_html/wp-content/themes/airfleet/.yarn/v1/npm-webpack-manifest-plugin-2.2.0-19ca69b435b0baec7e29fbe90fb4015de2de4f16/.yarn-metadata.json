{
  "manifest": {
    "name": "webpack-manifest-plugin",
    "version": "2.2.0",
    "description": "webpack plugin for generating asset manifests",
    "main": "index.js",
    "scripts": {
      "test": "jest",
      "codecov": "codecov"
    },
    "author": {
      "name": "Dane Thurber",
      "email": "dane.thurber@gmail.com"
    },
    "license": "MIT",
    "engines": {
      "node": ">=6.11.5"
    },
    "peerDependencies": {
      "webpack": "2 || 3 || 4"
    },
    "devDependencies": {
      "codecov": "^3.1.0",
      "css-loader": "^1.0.0",
      "extract-text-webpack-plugin": "^3.0.2",
      "file-loader": "^2.0.0",
      "jest": "^23.5.0",
      "memory-fs": "^0.4.1",
      "react": "^16.3.2",
      "rimraf": "^2.6.1",
      "style-loader": "^0.23.0",
      "svgr": "^1.9.2",
      "webpack": "^3.12.0"
    },
    "files": [
      "index.js",
      "lib"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/danethurber/webpack-manifest-plugin.git"
    },
    "bugs": {
      "url": "https://github.com/danethurber/webpack-manifest-plugin/issues"
    },
    "homepage": "https://github.com/danethurber/webpack-manifest-plugin",
    "dependencies": {
      "fs-extra": "^7.0.0",
      "lodash": ">=3.5 <5",
      "object.entries": "^1.1.0",
      "tapable": "^1.0.0"
    },
    "jest": {
      "testEnvironment": "node",
      "coverageDirectory": "./coverage/",
      "collectCoverage": true
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-webpack-manifest-plugin-2.2.0-19ca69b435b0baec7e29fbe90fb4015de2de4f16/package.json",
    "readmeFilename": "README.md",
    "readme": "# Webpack Manifest Plugin [![Build Status](https://travis-ci.org/danethurber/webpack-manifest-plugin.svg?branch=master)](https://travis-ci.org/danethurber/webpack-manifest-plugin)  [![codecov](https://codecov.io/gh/danethurber/webpack-manifest-plugin/badge.svg?branch=master)](https://codecov.io/gh/danethurber/webpack-manifest-plugin?branch=master) [![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/webpack-manifest-plugin#)\n\n\nWebpack plugin for generating an asset manifest.\n\n> NOTE: The following is related to the next major version of `webpack-manifest-plugin`, please check https://github.com/danethurber/webpack-manifest-plugin/blob/1.x/README.md for `v1` documentation\n\n## Install\n\n```bash\nnpm install --save-dev webpack-manifest-plugin\n```\n\n## Usage\n\nIn your `webpack.config.js`\n\n```javascript\nvar ManifestPlugin = require('webpack-manifest-plugin');\n\nmodule.exports = {\n    // ...\n    plugins: [\n      new ManifestPlugin()\n    ]\n};\n```\n\nThis will generate a `manifest.json` file in your root output directory with a mapping of all source file names to their corresponding output file, for example:\n\n```json\n{\n  \"mods/alpha.js\": \"mods/alpha.1234567890.js\",\n  \"mods/omega.js\": \"mods/omega.0987654321.js\"\n}\n```\n\n\n## API:\n\n```js\n// webpack.config.js\n\nmodule.exports = {\n  output: {\n    publicPath\n  },\n  plugins: [\n    new ManifestPlugin(options)\n  ]\n}\n```\n\n### `options.fileName`\n\nType: `String`<br>\nDefault: `manifest.json`\n\nThe manifest filename in your output directory.\n\n### `options.publicPath`\n\nType: `String`\nDefault: `output.publicPath`\n\nA path prefix that will be added to values of the manifest.\n\n### `options.basePath`\n\nType: `String`\n\nA path prefix for all keys. Useful for including your output path in the manifest.\n\n\n### `options.writeToFileEmit`\n\nType: `Boolean`<br>\nDefault: `false`\n\nIf set to `true` will emit to build folder and memory in combination with `webpack-dev-server`\n\n\n### `options.seed`\n\nType: `Object`<br>\nDefault: `{}`\n\nA cache of key/value pairs to used to seed the manifest. This may include a set of [custom key/value](https://developer.mozilla.org/en-US/Add-ons/WebExtensions/manifest.json) pairs to include in your manifest, or may be used to combine manifests across compilations in [multi-compiler mode](https://github.com/webpack/webpack/tree/master/examples/multi-compiler). To combine manifests, pass a shared seed object to each compiler's ManifestPlugin instance.\n\n### `options.filter`\n\nType: `Function(FileDescriptor): Boolean`\n\nFilter out files. [FileDescriptor typings](#filedescriptor)\n\n\n### `options.map`\n\nType: `Function(FileDescriptor): FileDescriptor`\n\nModify files details before the manifest is created. [FileDescriptor typings](#filedescriptor)\n\n### `options.sort`\n\nType: `Function(FileDescriptor): number`\n\nSort files before they are passed to `generate`. [FileDescriptor typings](#filedescriptor)\n\n### `options.generate`\n\nType: `Function(Object, FileDescriptor, string[]): Object`<br>\nDefault: `(seed, files, entrypoints) => files.reduce((manifest, {name, path}) => ({...manifest, [name]: path}), seed)`\n\nCreate the manifest. It can return anything as long as it's serialisable by `JSON.stringify`. [FileDescriptor typings](#filedescriptor)\n\n### `options.serialize`\n\nType: `Function(Object): string`<br>\nDefault: `(manifest) => JSON.stringify(manifest, null, 2)`\n\nOutput manifest file in different format then json (i.e. yaml).\n\n## FileDescriptor\n\n```ts\nFileDescriptor {\n  path: string;\n  name: string | null;\n  isInitial: boolean;\n  isChunk: boolean;\n  chunk?: Chunk;\n  isAsset: boolean;\n  isModuleAsset: boolean;\n}\n```\n\n### `chunk`\n\nType: [`Chunk`](https://github.com/webpack/webpack/blob/master/lib/Chunk.js)\n\nOnly available is `isChunk` is `true`\n\n### `isInitial`\n\nType: `Boolean`\n\nIs required to run you app. Cannot be `true` if `isChunk` is `false`.\n\n### `isModuleAsset`\n\nType: `Boolean`\n\nIs required by a module. Cannot be `true` if `isAsset` is `false`.\n\n\n## License\n\nMIT Â© [Dane Thurber](https://github.com/danethurber)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Dane Thurber <dane.thurber@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/webpack-manifest-plugin/-/webpack-manifest-plugin-2.2.0.tgz#19ca69b435b0baec7e29fbe90fb4015de2de4f16",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/webpack-manifest-plugin/-/webpack-manifest-plugin-2.2.0.tgz",
    "hash": "19ca69b435b0baec7e29fbe90fb4015de2de4f16",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "19ca69b435b0baec7e29fbe90fb4015de2de4f16"
}