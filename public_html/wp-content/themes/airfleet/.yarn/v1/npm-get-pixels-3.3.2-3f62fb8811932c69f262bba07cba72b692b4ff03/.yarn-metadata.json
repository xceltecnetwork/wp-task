{
  "manifest": {
    "name": "get-pixels",
    "version": "3.3.2",
    "description": "Reads the pixels of an image as an ndarray",
    "main": "node-pixels.js",
    "dependencies": {
      "data-uri-to-buffer": "0.0.3",
      "jpeg-js": "^0.3.2",
      "mime-types": "^2.0.1",
      "ndarray": "^1.0.13",
      "ndarray-pack": "^1.1.1",
      "node-bitmap": "0.0.1",
      "omggif": "^1.0.5",
      "parse-data-uri": "^0.2.0",
      "pngjs": "^3.3.3",
      "request": "^2.44.0",
      "through": "^2.3.4"
    },
    "devDependencies": {
      "beefy": "^2.1.8",
      "brfs": "^1.2.0",
      "browserify": "^3.44.0",
      "tap": "^10.7.0",
      "tape": "^2.12.3"
    },
    "scripts": {
      "test": "tap test/*.js",
      "test-browser": "beefy test/test.js --open  -- -t brfs"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/scijs/get-pixels.git"
    },
    "keywords": [
      "ndarray",
      "pixel",
      "get",
      "read",
      "pixel",
      "image",
      "png",
      "jpeg",
      "jpg",
      "jpe",
      "gif",
      "decode",
      "buffer",
      "data",
      "parse",
      "dom",
      "node",
      "browserify"
    ],
    "browser": "dom-pixels.js",
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "380bbda330666e4a4066c48ef5a42770d13bcd5c",
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-get-pixels-3.3.2-3f62fb8811932c69f262bba07cba72b692b4ff03/package.json",
    "readme": "get-pixels\n==========\nGiven a URL/path, grab all the pixels in an image and return the result as an [ndarray](https://github.com/mikolalysenko/ndarray).  Written in 100% JavaScript, works both in browserify and in node.js and has no external native dependencies.\n\nCurrently the following file formats are supported:\n\n* `PNG`\n* `JPEG`\n* `GIF`\n\nExample\n=======\n\n```javascript\nvar getPixels = require(\"get-pixels\")\n\ngetPixels(\"lena.png\", function(err, pixels) {\n  if(err) {\n    console.log(\"Bad image path\")\n    return\n  }\n  console.log(\"got pixels\", pixels.shape.slice())\n})\n```\n\nInstall\n=======\n\n    npm install get-pixels\n\n### `require(\"get-pixels\")(url[, type], cb(err, pixels))`\nReads all the pixels from url into an ndarray.\n\n* `url` is the path to the file.  It can be a relative path, an http url, a data url, or an [in-memory Buffer](http://nodejs.org/api/buffer.html).\n* `type` is an optional mime type for the image (required when using a Buffer)\n* `cb(err, pixels)` is a callback which gets triggered once the image is loaded.\n\n**Returns** An ndarray of pixels in raster order having shape equal to `[width, height, channels]`.\n\n**Note** For animated GIFs, a 4D array is returned with shape `[numFrames, width, height, 4]`, where each frame is a slice of the final array.\n\nCredits\n=======\n(c) 2013-2014 Mikola Lysenko. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/get-pixels/-/get-pixels-3.3.2.tgz#3f62fb8811932c69f262bba07cba72b692b4ff03",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/get-pixels/-/get-pixels-3.3.2.tgz",
    "hash": "3f62fb8811932c69f262bba07cba72b692b4ff03",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "3f62fb8811932c69f262bba07cba72b692b4ff03"
}