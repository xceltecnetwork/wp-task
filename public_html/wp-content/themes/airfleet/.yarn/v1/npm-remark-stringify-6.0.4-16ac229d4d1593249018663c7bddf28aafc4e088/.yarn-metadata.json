{
  "manifest": {
    "name": "remark-stringify",
    "version": "6.0.4",
    "description": "Markdown compiler for remark",
    "license": "MIT",
    "keywords": [
      "markdown",
      "abstract",
      "syntax",
      "tree",
      "ast",
      "stringify"
    ],
    "homepage": "https://remark.js.org/",
    "repository": {
      "type": "git",
      "url": "https://github.com/remarkjs/remark/tree/master/packages/remark-stringify"
    },
    "bugs": {
      "url": "https://github.com/remarkjs/remark/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "https://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "https://wooorm.com"
      },
      {
        "name": "Eugene Sharygin",
        "email": "eush77@gmail.com"
      }
    ],
    "files": [
      "index.js",
      "lib"
    ],
    "dependencies": {
      "ccount": "^1.0.0",
      "is-alphanumeric": "^1.0.0",
      "is-decimal": "^1.0.0",
      "is-whitespace-character": "^1.0.0",
      "longest-streak": "^2.0.1",
      "markdown-escapes": "^1.0.0",
      "markdown-table": "^1.1.0",
      "mdast-util-compact": "^1.0.0",
      "parse-entities": "^1.0.2",
      "repeat-string": "^1.5.4",
      "state-toggle": "^1.0.0",
      "stringify-entities": "^1.0.1",
      "unherit": "^1.0.4",
      "xtend": "^4.0.1"
    },
    "devDependencies": {
      "tape": "^4.9.1",
      "unified": "^7.0.0",
      "unist-builder": "^1.0.3",
      "unist-util-visit": "^1.4.0",
      "wcwidth": "^1.0.1"
    },
    "scripts": {
      "test": "tape test.js"
    },
    "xo": false,
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-remark-stringify-6.0.4-16ac229d4d1593249018663c7bddf28aafc4e088/package.json",
    "readmeFilename": "readme.md",
    "readme": "# remark-stringify [![Travis][build-badge]][build-status] [![Coverage][coverage-badge]][coverage-status] [![Downloads][dl-badge]][dl] [![Size][size-badge]][size] [![Chat][chat-badge]][chat]\n\n[Compiler][] for [**unified**][unified].\nStringifies [**mdast**][mdast] syntax trees to markdown.\nUsed in the [**remark** processor][processor] but can be used on its own as\nwell.\nCan be [extended][extend] to change how markdown is parsed.\n\n* * *\n\n**Announcing the unified collective!  ðŸŽ‰\n[Read more about it on Medium Â»][announcement]**\n\n## Sponsors\n\n<!--lint ignore no-html maximum-line-length-->\n\n<table>\n  <tr valign=\"top\">\n    <td width=\"20%\" align=\"center\">\n      <a href=\"https://zeit.co\"><img src=\"https://avatars1.githubusercontent.com/u/14985020?s=400&v=4\"></a>\n      <br><br>ðŸ¥‡\n      <a href=\"https://zeit.co\">ZEIT</a>\n    </td>\n    <td width=\"20%\" align=\"center\">\n      <a href=\"https://www.gatsbyjs.org\"><img src=\"https://avatars1.githubusercontent.com/u/12551863?s=400&v=4\"></a>\n      <br><br>ðŸ¥‡\n      <a href=\"https://www.gatsbyjs.org\">Gatsby</a></td>\n    <td width=\"20%\" align=\"center\">\n      <a href=\"https://compositor.io\"><img src=\"https://avatars1.githubusercontent.com/u/19245838?s=400&v=4\"></a>\n      <br><br>ðŸ¥‰\n      <a href=\"https://compositor.io\">Compositor</a>\n    </td>\n    <td width=\"20%\" align=\"center\">\n      <a href=\"https://www.holloway.com\"><img src=\"https://avatars1.githubusercontent.com/u/35904294?s=400&v=4\"></a>\n      <br><br>\n      <a href=\"https://www.holloway.com\">Holloway</a>\n    </td>\n    <td width=\"20%\" align=\"center\">\n      <br><br><br><br>\n      <a href=\"https://opencollective.com/unified\"><strong>You?</strong>\n    </td>\n  </tr>\n</table>\n\n## Installation\n\n[npm][]:\n\n```sh\nnpm install remark-stringify\n```\n\n## Usage\n\n```js\nvar unified = require('unified')\nvar createStream = require('unified-stream')\nvar parse = require('remark-parse')\nvar toc = require('remark-toc')\nvar stringify = require('remark-stringify')\n\nvar processor = unified()\n  .use(parse)\n  .use(toc)\n  .use(stringify, {\n    bullet: '*',\n    fence: '~',\n    fences: true,\n    incrementListMarker: false\n  })\n\nprocess.stdin.pipe(createStream(processor)).pipe(process.stdout)\n```\n\n## Table of Contents\n\n*   [API](#api)\n    *   [processor.use(stringify\\[, options\\])](#processorusestringify-options)\n    *   [stringify.Compiler](#stringifycompiler)\n*   [Extending the Compiler](#extending-the-compiler)\n    *   [Compiler#visitors](#compilervisitors)\n    *   [function visitor(node\\[, parent\\])](#function-visitornode-parent)\n*   [License](#license)\n\n## API\n\n### `processor.use(stringify[, options])`\n\nConfigure the `processor` to stringify [**mdast**][mdast] syntax trees\nto markdown.\n\n##### `options`\n\nOptions are passed directly, or passed later through [`processor.data()`][data].\n\n###### `options.gfm`\n\nStringify with the required escapes for GFM compatible markdown (`boolean`,\ndefault: `true`).\n\n*   Escape pipes (`|`, for tables)\n*   Escape colons (`:`, for literal URLs)\n*   Escape tildes (`~`, for strike-through)\n\n###### `options.commonmark`\n\nStringify for CommonMark compatible markdown (`boolean`, default: `false`).\n\n*   Compile adjacent blockquotes separately\n*   Escape more characters using slashes, instead of as entities\n\n###### `options.pedantic`\n\nStringify for pedantic compatible markdown (`boolean`, default: `false`).\n\n*   Escape underscores in words\n\n###### `options.entities`\n\nHow to stringify entities (`string` or `boolean`, default: `false`):\n\n*   `true` â€” Entities are generated for special HTML characters\n    (`&` > `&amp;`) and non-ASCII characters (`Â©` > `&copy;`).\n    If named entities are not (widely) supported, numbered character\n    references are used (`â€™` > `&#x2019;`)\n*   `'numbers'` â€” Numbered entities are generated (`&` > `&#x26;`)\n    for special HTML characters and non-ASCII characters\n*   `'escape'` â€” Special HTML characters are encoded (`&` >\n    `&amp;`, `â€™` > `&#x2019;`), non-ASCII characters not (Ã¶ persists)\n\n###### `options.setext`\n\nCompile headings, when possible, in Setext-style (`boolean`, default: `false`).\nUses `=` for level one headings and `-` for level two headings.  Other heading\nlevels are compiled as ATX (respecting `closeAtx`).\n\n###### `options.closeAtx`\n\nCompile ATX headings with the same amount of closing hashes as opening hashes\n(`boolean`, default: `false`).\n\n###### `options.looseTable`\n\nCreate tables without fences: initial and final pipes (`boolean`, default:\n`false`).\n\n###### `options.spacedTable`\n\nCreate tables without spacing between pipes and content (`boolean`, default:\n`true`).\n\n###### `options.paddedTable`\n\nCreate tables with padding in each cell so that they are the same size\n(`boolean`, default: `true`).\n\n###### `options.stringLength`\n\nFunction passed to [`markdown-table`][markdown-table] to detect the length of a\ntable cell (`Function`, default: [`s => s.length`][string-length]).\n\n###### `options.fence`\n\nFence marker to use for code blocks (`'~'` or ``'`'``, default: ``'`'``).\n\n###### `options.fences`\n\nStringify code blocks without language with fences (`boolean`, default:\n`false`).\n\n###### `options.bullet`\n\nBullet marker to use for unordered list items (`'-'`, `'*'`, or `'+'`,\ndefault: `'-'`).\n\n###### `options.listItemIndent`\n\nHow to indent the content from list items (`'tab'`, `'mixed'` or `'1'`,\ndefault: `'tab'`).\n\n*   `'tab'`: use tab stops (4 spaces)\n*   `'1'`: use one space\n*   `'mixed'`: use `1` for tight and `tab` for loose list items\n\n###### `options.incrementListMarker`\n\nWhether to increment ordered list item bullets (`boolean`, default: `true`).\n\n###### `options.rule`\n\nMarker to use for thematic breaks / horizontal rules (`'-'`, `'*'`, or `'_'`,\ndefault: `'*'`).\n\n###### `options.ruleRepetition`\n\nNumber of markers to use for thematic breaks / horizontal rules (`number`,\ndefault: `3`).  Should be `3` or more.\n\n###### `options.ruleSpaces`\n\nWhether to pad thematic break (horizontal rule) markers with spaces (`boolean`,\ndefault `true`).\n\n###### `options.strong`\n\nMarker to use for importance (`'_'` or `'*'`, default `'*'`).\n\n###### `options.emphasis`\n\nMarker to use for emphasis (`'_'` or `'*'`, default `'_'`).\n\n### `stringify.Compiler`\n\nAccess to the raw [compiler][], if you need it.\n\n## Extending the Compiler\n\nIf this plugin is used, it adds a [`Compiler`][compiler] constructor\nto the `processor`.  Other plugins can change and add visitors on\nthe compilerâ€™s prototype to change how markdown is stringified.\n\nThe below plugin modifies a [visitor][] to add an extra blank line\nbefore level two headings.\n\n```js\nmodule.exports = gap\n\nfunction gap() {\n  var Compiler = this.Compiler\n  var visitors = Compiler.prototype.visitors\n  var original = visitors.heading\n\n  visitors.heading = heading\n\n  function heading(node) {\n    return (node.depth === 2 ? '\\n' : '') + original.apply(this, arguments)\n  }\n}\n```\n\n### `Compiler#visitors`\n\nAn object mapping [node][] types to [`visitor`][visitor]s.\n\n### `function visitor(node[, parent])`\n\nStringify `node`.\n\n###### Parameters\n\n*   `node` ([`Node`][node]) â€” Node to compile\n*   `parent` ([`Node`][node], optional) â€” Parent of `node`\n\n###### Returns\n\n`string`, the compiled given `node`.\n\n## License\n\n[MIT][license] Â© [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/remarkjs/remark/master.svg\n\n[build-status]: https://travis-ci.org/remarkjs/remark\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/remarkjs/remark.svg\n\n[coverage-status]: https://codecov.io/github/remarkjs/remark\n\n[dl-badge]: https://img.shields.io/npm/dm/remark-stringify.svg\n\n[dl]: https://www.npmjs.com/package/remark-stringify\n\n[size-badge]: https://img.shields.io/bundlephobia/minzip/remark-stringify.svg\n\n[size]: https://bundlephobia.com/result?p=remark-stringify\n\n[chat-badge]: https://img.shields.io/badge/join%20the%20community-on%20spectrum-7b16ff.svg\n\n[chat]: https://spectrum.chat/unified/remark\n\n[license]: https://github.com/remarkjs/remark/blob/master/license\n\n[author]: https://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[unified]: https://github.com/unifiedjs/unified\n\n[processor]: https://github.com/remarkjs/remark\n\n[data]: https://github.com/unifiedjs/unified#processordatakey-value\n\n[compiler]: https://github.com/unifiedjs/unified#processorcompiler\n\n[mdast]: https://github.com/syntax-tree/mdast\n\n[node]: https://github.com/syntax-tree/unist#node\n\n[extend]: #extending-the-compiler\n\n[visitor]: #function-visitornode-parent\n\n[markdown-table]: https://github.com/wooorm/markdown-table\n\n[string-length]: https://github.com/wooorm/markdown-table#stringlengthcell\n\n[announcement]: https://medium.com/unifiedjs/collectively-evolving-through-crowdsourcing-22c359ea95cc\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/remark-stringify/-/remark-stringify-6.0.4.tgz#16ac229d4d1593249018663c7bddf28aafc4e088",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/remark-stringify/-/remark-stringify-6.0.4.tgz",
    "hash": "16ac229d4d1593249018663c7bddf28aafc4e088",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "16ac229d4d1593249018663c7bddf28aafc4e088"
}