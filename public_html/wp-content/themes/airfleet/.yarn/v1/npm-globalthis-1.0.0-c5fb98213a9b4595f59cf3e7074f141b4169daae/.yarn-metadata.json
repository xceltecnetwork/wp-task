{
  "manifest": {
    "name": "globalthis",
    "version": "1.0.0",
    "author": {
      "name": "Jordan Harband"
    },
    "description": "ECMAScript spec-compliant polyfill/shim for `globalThis`",
    "license": "MIT",
    "main": "index.js",
    "scripts": {
      "pretest": "npm run --silent lint && es-shim-api --bound --property",
      "test": "npm run --silent tests-only",
      "posttest": "npm run --silent security",
      "tests-only": "npm run --silent test:implementation && npm run --silent test:shim",
      "test:native": "node test/native.js",
      "test:shim": "node test/shimmed.js",
      "test:implementation": "node test/index.js",
      "coverage": "covert test/*.js",
      "coverage:quiet": "covert test/*.js --quiet",
      "lint": "npm run --silent jscs && npm run --silent eslint",
      "eslint": "eslint *.js test/*.js",
      "jscs": "jscs *.js test/*.js",
      "build": "mkdir -p dist && browserify browserShim.js > dist/browser.js",
      "prepublish": "npm run --silent build",
      "security": "nsp check"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/ljharb/System.global.git"
    },
    "keywords": [
      "window",
      "self",
      "global",
      "globalThis",
      "System.global",
      "global object",
      "global this value",
      "ECMAScript",
      "es-shim API",
      "polyfill",
      "shim"
    ],
    "dependencies": {
      "define-properties": "^1.1.2",
      "function-bind": "^1.1.1",
      "object-keys": "^1.0.12"
    },
    "devDependencies": {
      "@es-shims/api": "^2.1.2",
      "@ljharb/eslint-config": "^13.0.0",
      "browserify": "^16.2.2",
      "covert": "^1.1.0",
      "eslint": "^5.3.0",
      "for-each": "^0.3.3",
      "is": "^3.2.1",
      "jscs": "^3.0.7",
      "nsp": "^3.2.1",
      "tape": "^4.9.1"
    },
    "testling": {
      "files": "test/index.js",
      "browsers": [
        "iexplore/6.0..latest",
        "firefox/3.0..6.0",
        "firefox/15.0..latest",
        "firefox/nightly",
        "chrome/4.0..10.0",
        "chrome/20.0..latest",
        "chrome/canary",
        "opera/10.0..latest",
        "opera/next",
        "safari/4.0..latest",
        "ipad/6.0..latest",
        "iphone/6.0..latest",
        "android-browser/4.2"
      ]
    },
    "engines": {
      "node": ">= 0.4"
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-globalthis-1.0.0-c5fb98213a9b4595f59cf3e7074f141b4169daae/package.json",
    "readmeFilename": "README.md",
    "readme": "# globalThis <sup>[![Version Badge][npm-version-svg]][npm-url]</sup>\n\n[![Build Status][travis-svg]][travis-url]\n[![dependency status][deps-svg]][deps-url]\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\n[![npm badge][npm-badge-png]][npm-url]\n\nAn ECMAScript spec-compliant polyfill/shim for `globalThis`. Invoke its \"shim\" method to shim `globalThis` if it is unavailable.\n\nThis package implements the [es-shim API](https://github.com/es-shims/api) interface. It works in an ES3-supported environment and complies with the [spec proposal](https://github.com/tc39/proposal-global).\n\nMost common usage:\n```js\nvar globalThis = require('globalThis')(); // returns native method if compliant\n\t/* or */\nvar globalThis = require('globalThis/polyfill')(); // returns native method if compliant\n```\n\n## Example\n\n```js\nvar assert = require('assert');\n\n// the below function is not CSP-compliant, but reliably gets the\n// global object in sloppy mode in every engine.\nvar getGlobal = Function('return this');\n\nassert.equal(globalThis, getGlobal());\n```\n\n```js\n/* when `globalThis` is not present */\nvar shimmedGlobal = require('globalthis').shim();\n\t/* or */\nvar shimmedGlobal = require('globalthis/shim')();\n\nassert.equal(shimmedGlobal, globalThis);\nassert.equal(shimmedGlobal, getGlobal());\n```\n\n```js\n/* when `globalThis` is present */\nvar shimmedGlobal = require('globalthis').shim();\n\nassert.equal(shimmedGlobal, globalThis);\nassert.equal(shimmedGlobal, getGlobal());\n```\n\n## Tests\nSimply clone the repo, `npm install`, and run `npm test`\n\n[npm-url]: https://npmjs.org/package/globalthis\n[npm-version-svg]: http://versionbadg.es/ljharb/globalThis.svg\n[travis-svg]: https://travis-ci.org/ljharb/globalThis.svg\n[travis-url]: https://travis-ci.org/ljharb/globalThis\n[deps-svg]: https://david-dm.org/ljharb/globalThis.svg?theme=shields.io\n[deps-url]: https://david-dm.org/ljharb/globalThis\n[dev-deps-svg]: https://david-dm.org/ljharb/globalThis/dev-status.svg?theme=shields.io\n[dev-deps-url]: https://david-dm.org/ljharb/globalThis#info=devDependencies\n[testling-png]: https://ci.testling.com/ljharb/globalThis.png\n[testling-url]: https://ci.testling.com/ljharb/globalThis\n[npm-badge-png]: https://nodei.co/npm/globalthis.png?downloads=true&stars=true\n[license-image]: http://img.shields.io/npm/l/globalthis.svg\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/globalthis.svg\n[downloads-url]: http://npm-stat.com/charts.html?package=globalthis\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2016 Jordan Harband\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/globalthis/-/globalthis-1.0.0.tgz#c5fb98213a9b4595f59cf3e7074f141b4169daae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/globalthis/-/globalthis-1.0.0.tgz",
    "hash": "c5fb98213a9b4595f59cf3e7074f141b4169daae",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "c5fb98213a9b4595f59cf3e7074f141b4169daae"
}