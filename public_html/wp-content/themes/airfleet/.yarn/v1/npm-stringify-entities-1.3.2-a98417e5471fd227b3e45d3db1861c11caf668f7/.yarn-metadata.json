{
  "manifest": {
    "name": "stringify-entities",
    "version": "1.3.2",
    "description": "Encode HTML character references and character entities",
    "license": "MIT",
    "keywords": [
      "stringify",
      "encode",
      "escape",
      "html",
      "character",
      "reference",
      "entity",
      "entities"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/wooorm/stringify-entities.git"
    },
    "bugs": {
      "url": "https://github.com/wooorm/stringify-entities/issues"
    },
    "author": {
      "name": "Titus Wormer",
      "email": "tituswormer@gmail.com",
      "url": "http://wooorm.com"
    },
    "contributors": [
      {
        "name": "Titus Wormer",
        "email": "tituswormer@gmail.com",
        "url": "http://wooorm.com"
      }
    ],
    "files": [
      "dangerous.json",
      "index.js"
    ],
    "dependencies": {
      "character-entities-html4": "^1.0.0",
      "character-entities-legacy": "^1.0.0",
      "is-alphanumerical": "^1.0.0",
      "is-hexadecimal": "^1.0.0"
    },
    "devDependencies": {
      "browserify": "^16.0.0",
      "character-entities": "^1.0.0",
      "esmangle": "^1.0.0",
      "nyc": "^11.0.0",
      "remark-cli": "^5.0.0",
      "remark-preset-wooorm": "^4.0.0",
      "tape": "^4.0.0",
      "xo": "^0.20.0"
    },
    "scripts": {
      "generate": "node build",
      "format": "remark . -qfo && prettier --write '**/*.js' && xo --fix",
      "build-bundle": "browserify index.js --bare -s stringifyEntities > stringify-entities.js",
      "build-mangle": "esmangle stringify-entities.js > stringify-entities.min.js",
      "build": "npm run build-bundle && npm run build-mangle",
      "test-api": "node test",
      "test-coverage": "nyc --reporter lcov tape test.js",
      "test": "npm run generate && npm run format && npm run build && npm run test-coverage"
    },
    "nyc": {
      "check-coverage": true,
      "lines": 100,
      "functions": 100,
      "branches": 100
    },
    "prettier": {
      "tabWidth": 2,
      "useTabs": false,
      "singleQuote": true,
      "bracketSpacing": false,
      "semi": false,
      "trailingComma": "none"
    },
    "xo": {
      "prettier": true,
      "esnext": false,
      "rules": {
        "no-var": "off",
        "unicorn/number-literal-case": "off",
        "prefer-arrow-callback": "off",
        "guard-for-in": "off"
      },
      "ignores": [
        "stringify-entities.js"
      ]
    },
    "remarkConfig": {
      "plugins": [
        "preset-wooorm"
      ]
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-stringify-entities-1.3.2-a98417e5471fd227b3e45d3db1861c11caf668f7/package.json",
    "readmeFilename": "readme.md",
    "readme": "# stringify-entities [![Build Status][build-badge]][build-status] [![Coverage Status][coverage-badge]][coverage-status]\n\nEncode HTML character references and character entities.\n\n*   [x] Very fast\n*   [x] Just the encoding part\n*   [x] Reliable: ``'`'`` characters are escaped to ensure no scripts\n    run in IE6-8.  Additionally, only named entities recognised by HTML4\n    are encoded, meaning the infamous `&apos;` (which people think is a\n    [virus][]) won’t show up\n\n## Algorithm\n\nBy default, all dangerous, non-ASCII, or non-printable ASCII characters\nare encoded.  A [subset][] of characters can be given to encode just\nthose characters.  Alternatively, pass [`escapeOnly`][escapeonly] to\nescape just the dangerous characters (`\"`, `'`, `<`, `>`, `&`, `` ` ``).\nBy default, numeric entities are used.  Pass [`useNamedReferences`][named]\nto use named entities when possible, or [`useShortestReferences`][short]\nto use them if that results in less bytes.\n\n## Installation\n\n[npm][]:\n\n```bash\nnpm install stringify-entities\n```\n\n## Usage\n\n```js\nvar stringify = require('stringify-entities')\n\nstringify('alpha © bravo ≠ charlie 𝌆 delta')\n// => 'alpha &#xA9; bravo &#x2260; charlie &#x1D306; delta'\n\nstringify('alpha © bravo ≠ charlie 𝌆 delta', {useNamedReferences: true})\n// => 'alpha &copy; bravo &ne; charlie &#x1D306; delta'\n```\n\n## API\n\n### `stringifyEntities(value[, options])`\n\nEncode special characters in `value`.\n\n##### `options`\n\n###### `options.escapeOnly`\n\nWhether to only escape possibly dangerous characters (`boolean`,\ndefault: `false`).  Those characters are `\"`, `'`, `<`, `>` `&`, and\n`` ` ``.\n\n###### `options.subset`\n\nWhether to only escape the given subset of characters (`Array.<string>`).\n\n###### `options.useNamedReferences`\n\nWhether to use named entities where possible (`boolean?`, default:\n`false`).\n\n###### `options.useShortestReferences`\n\nWhether to use named entities, where possible, if that results in less\nbytes (`boolean?`, default: `false`).  **Note**: `useNamedReferences`\ncan be omitted when using `useShortestReferences`.\n\n###### `options.omitOptionalSemicolons`\n\nWhether to omit semi-colons when possible (`boolean?`, default: `false`).\n**Note**: This creates parse errors: don’t use this except when building\na minifier.\n\nOmitting semi-colons is possible for [certain][dangerous] [legacy][]\nnamed references, and numeric entities, in some cases.\n\n###### `options.attribute`\n\nOnly needed when operating dangerously with `omitOptionalSemicolons: true`.\nCreate entities which don’t fail in attributes (`boolean?`, default:\n`false`).\n\n## Related\n\n*   [`parse-entities`](https://github.com/wooorm/parse-entities)\n    — Parse HTML character references\n*   [`character-entities`](https://github.com/wooorm/character-entities)\n    — Info on character entities\n*   [`character-entities-html4`](https://github.com/wooorm/character-entities-html4)\n    — Info on HTML4 character entities\n*   [`character-entities-legacy`](https://github.com/wooorm/character-entities-legacy)\n    — Info on legacy character entities\n*   [`character-reference-invalid`](https://github.com/wooorm/character-reference-invalid)\n    — Info on invalid numeric character references\n\n## License\n\n[MIT][license] © [Titus Wormer][author]\n\n<!-- Definitions -->\n\n[build-badge]: https://img.shields.io/travis/wooorm/stringify-entities.svg\n\n[build-status]: https://travis-ci.org/wooorm/stringify-entities\n\n[coverage-badge]: https://img.shields.io/codecov/c/github/wooorm/stringify-entities.svg\n\n[coverage-status]: https://codecov.io/github/wooorm/stringify-entities\n\n[license]: LICENSE\n\n[author]: http://wooorm.com\n\n[npm]: https://docs.npmjs.com/cli/install\n\n[virus]: http://www.telegraph.co.uk/technology/advice/10516839/Why-do-some-apostrophes-get-replaced-with-andapos.html\n\n[dangerous]: dangerous.json\n\n[legacy]: https://github.com/wooorm/character-entities-legacy\n\n[subset]: #optionssubset\n\n[escapeonly]: #optionsescapeonly\n\n[named]: #optionsusenamedreferences\n\n[short]: #optionsuseshortestreferences\n",
    "licenseText": "(The MIT License)\n\nCopyright (c) 2015 Titus Wormer <mailto:tituswormer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/stringify-entities/-/stringify-entities-1.3.2.tgz#a98417e5471fd227b3e45d3db1861c11caf668f7",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/stringify-entities/-/stringify-entities-1.3.2.tgz",
    "hash": "a98417e5471fd227b3e45d3db1861c11caf668f7",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "a98417e5471fd227b3e45d3db1861c11caf668f7"
}