{
  "manifest": {
    "name": "intersection-observer",
    "version": "0.5.1",
    "description": "A polyfill for IntersectionObserver",
    "main": "intersection-observer",
    "repository": {
      "type": "git",
      "url": "git@github.com:w3c/IntersectionObserver.git"
    },
    "keywords": [
      "Intersection",
      "Observer"
    ],
    "author": {
      "name": "Philip Walton",
      "email": "philip@philipwalton.com",
      "url": "http://philipwalton.com"
    },
    "license": "W3C-20150513",
    "bugs": {
      "url": "https://github.com/w3c/IntersectionObserver/issues"
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-intersection-observer-0.5.1-e340fc56ce74290fe2b2394d1ce88c4353ac6dfa/package.json",
    "readmeFilename": "README.md",
    "readme": "# `IntersectionObserver` polyfill\n\nThis library polyfills the native [`IntersectionObserver`](http://w3c.github.io/IntersectionObserver/) API in unsupporting browsers. See the [API documentation](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) for usage information.\n\n- [Installation](#installation)\n- [Configuring the polyfill](#configuring-the-polyfill)\n- [Browser support](#browser-support)\n- [Running the tests](#running-the-tests)\n\n## Installation\n\nYou can install the polyfill via npm or by downloading a [zip](https://github.com/w3c/IntersectionObserver/archive/gh-pages.zip) of this repository:\n\n```sh\nnpm install intersection-observer\n```\n\n### Adding the polyfill to your site\n\nThe examples below show various ways to add the `IntersectionObserver` polyfill to your site. Be sure to include the polyfill prior to referencing it anywhere in your JavaScript code.\n\n**Using `<script>` tags in the HTML:**\n\n```html\n<!-- Load the polyfill first. -->\n<script src=\"path/to/intersection-observer.js\"></script>\n\n<!-- Load all other JavaScript. -->\n<script src=\"app.js\"></script>\n```\n\n**Using a module loader (e.g. Browserify or Webpack):**\n\n```js\n// Require the polyfill before requiring any other modules.\nrequire('intersection-observer');\n\nrequire('./foo.js');\nrequire('./bar.js');\n```\n\n## Configuring the polyfill\n\nIt's impossible to handle all possible ways a target element could intersect with a root element without resorting to constantly polling the document for intersection changes.\n\nTo avoid this extra work and performance penalty, the default configuration of the polyfill optimizes for the most common `IntersectionObserver` use cases, which primarily include target elements intersecting with a root element due to:\n\n- User scrolling.\n- Resizing the window.\n- Changes to the DOM.\n\nAll of the above can be handled without polling the DOM.\n\nThere are, however, additional use cases that the default configuration will not detect. These include target elements intersecting with a root element due to:\n\n- CSS changes on `:hover`, `:active`, or `:focus` states.\n- CSS changes due to transitions or animations with a long initial delay.\n- Resizable `<textarea>` elements that cause other elements to move around.\n- Scrolling of non-document elements in browsers that don't support the event capture phase.\n\nIf you need to handle any of these use-cases, you can configure the polyfill to poll the document by setting the `POLL_INTERVAL` property. This can be set either globally or on a per-instance basis.\n\n**Enabling polling for all instance:**\n\nTo enable polling for all instance, set a value for `POLL_INTERVAL` on the `IntersectionObserver` prototype:\n\n\n```js\nIntersectionObserver.prototype.POLL_INTERVAL = 100; // Time in milliseconds.\n```\n\n**Enabling polling for individual instance:**\n\nTo enable polling on only specific instances, set a `POLL_INTERVAL` value on the instance itself:\n\n```js\nvar io = new IntersectionObserver(callback);\nio.POLL_INTERVAL = 100; // Time in milliseconds.\nio.observe(someTargetElement);\n```\n\n**Note:** the `POLL_INTERVAL` property must be set prior to calling the `.observe` method, or the default configuration will be used.\n\n**Ignoring DOM changes**\n\nYou can also choose to not check for intersections when the DOM changes by setting an observer's `USE_MUTATION_OBSERVER` property to `false` (either globally on the prototype or per-instance)\n\n```js\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = false; // Globally\n\n// for an instance\nvar io = new IntersectionObserver(callback);\nio.USE_MUTATION_OBSERVER = false;\n```\n\nThis is recommended in cases where the DOM will update frequently but you know those updates will have no affect on the position or your target elements.\n\n## Browser support\n\nThe polyfill has been tested and known to work in the latest version of all browsers.\n\nLegacy support is also possible in very old browsers by including a shim for ES5 as well as the `window.getComputedStyle` method. The easiest way to load the IntersectionObserver polyfill and have it work in the widest range of browsers is via [polyfill.io](https://cdn.polyfill.io/v2/docs/), which will automatically include dependencies where necessary:\n\n```html\n<script src=\"https://polyfill.io/v2/polyfill.min.js?features=IntersectionObserver\"></script>\n```\n\nWith these polyfills, `IntersectionObserver` has been tested an known to work in the following browsers:\n\n<table>\n  <tr>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/chrome/chrome_48x48.png\" alt=\"Chrome\"><br>\n      笨能n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/firefox/firefox_48x48.png\" alt=\"Firefox\"><br>\n      笨能n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/safari/safari_48x48.png\" alt=\"Safari\"><br>\n      6+\n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/edge/edge_48x48.png\" alt=\"Edge\"><br>\n      笨能n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/archive/internet-explorer_7-8/internet-explorer_7-8_48x48.png\" alt=\"Internet Explorer\"><br>\n      7+\n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/opera/opera_48x48.png\" alt=\"Opera\"><br>\n      笨能n    </td>\n    <td align=\"center\">\n      <img src=\"https://raw.github.com/alrra/browser-logos/39.2.2/src/android/android_48x48.png\" alt=\"Android\"><br>\n      4.4+\n    </td>\n  </tr>\n</table>\n\n## Running the tests\n\nTo run the test suite for the `IntersectionObserver` polyfill, open the [`intersection-observer-test.html`](./intersection-observer-test.html) page in the browser of your choice.\n\nIf you run the tests in a browser that support `IntersectionObserver` natively, the tests will be run against the native implementation. If it doesn't the tests will be run against the polyfill.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/intersection-observer/-/intersection-observer-0.5.1.tgz#e340fc56ce74290fe2b2394d1ce88c4353ac6dfa",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/intersection-observer/-/intersection-observer-0.5.1.tgz",
    "hash": "e340fc56ce74290fe2b2394d1ce88c4353ac6dfa",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "e340fc56ce74290fe2b2394d1ce88c4353ac6dfa"
}