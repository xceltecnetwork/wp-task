{
  "manifest": {
    "name": "bin-wrapper",
    "version": "4.1.0",
    "description": "Binary wrapper that makes your programs seamlessly available as local dependencies",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/kevva/bin-wrapper.git"
    },
    "author": {
      "name": "Kevin Mårtensson",
      "email": "kevinmartensson@gmail.com",
      "url": "https://github.com/kevva"
    },
    "engines": {
      "node": ">=6"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "bin",
      "check",
      "local",
      "wrapper"
    ],
    "dependencies": {
      "bin-check": "^4.1.0",
      "bin-version-check": "^4.0.0",
      "download": "^7.1.0",
      "import-lazy": "^3.1.0",
      "os-filter-obj": "^2.0.0",
      "pify": "^4.0.1"
    },
    "devDependencies": {
      "ava": "*",
      "executable": "^4.1.1",
      "nock": "^10.0.2",
      "path-exists": "^3.0.0",
      "rimraf": "^2.6.2",
      "tempy": "^0.2.1",
      "xo": "*"
    },
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-bin-wrapper-4.1.0-99348f2cf85031e3ef7efce7e5300aeaae960605/package.json",
    "readmeFilename": "readme.md",
    "readme": "# bin-wrapper [![Build Status](https://travis-ci.org/kevva/bin-wrapper.svg?branch=master)](https://travis-ci.org/kevva/bin-wrapper)\n\n> Binary wrapper that makes your programs seamlessly available as local dependencies\n\n\n## Install\n\n```\n$ npm install bin-wrapper\n```\n\n\n## Usage\n\n```js\nconst BinWrapper = require('bin-wrapper');\n\nconst base = 'https://github.com/imagemin/gifsicle-bin/raw/master/vendor';\nconst bin = new BinWrapper()\n\t.src(`${base}/macos/gifsicle`, 'darwin')\n\t.src(`${base}/linux/x64/gifsicle`, 'linux', 'x64')\n\t.src(`${base}/win/x64/gifsicle.exe`, 'win32', 'x64')\n\t.dest(path.join('vendor'))\n\t.use(process.platform === 'win32' ? 'gifsicle.exe' : 'gifsicle')\n\t.version('>=1.71');\n\n(async () => {\n\tawait bin.run(['--version']);\n\tconsole.log('gifsicle is working');\n})();\n```\n\nGet the path to your binary with `bin.path()`:\n\n```js\nconsole.log(bin.path());\n//=> 'path/to/vendor/gifsicle'\n```\n\n\n## API\n\n### `new BinWrapper(options)`\n\nCreates a new `BinWrapper` instance.\n\n#### options\n\nType: `Object`\n\n##### skipCheck\n\nType: `boolean`<br>\nDefault: `false`\n\nWhether to skip the binary check or not.\n\n##### strip\n\nType: `number`<br>\nDefault: `1`\n\nStrip a number of leading paths from file names on extraction.\n\n### .src(url, [os], [arch])\n\nAdds a source to download.\n\n#### url\n\nType: `string`\n\nAccepts a URL pointing to a file to download.\n\n#### os\n\nType: `string`\n\nTie the source to a specific OS.\n\n#### arch\n\nType: `string`\n\nTie the source to a specific arch.\n\n### .dest(destination)\n\n#### destination\n\nType: `string`\n\nAccepts a path which the files will be downloaded to.\n\n### .use(binary)\n\n#### binary\n\nType: `string`\n\nDefine which file to use as the binary.\n\n### .path()\n\nReturns the full path to your binary.\n\n### .version(range)\n\n#### range\n\nType: `string`\n\nDefine a [semver range](https://github.com/isaacs/node-semver#ranges) to check\nthe binary against.\n\n### .run([arguments])\n\nRuns the search for the binary. If no binary is found it will download the file\nusing the URL provided in `.src()`.\n\n#### arguments\n\nType: `Array`<br>\nDefault: `['--version']`\n\nCommand to run the binary with. If it exits with code `0` it means that the\nbinary is working.\n\n\n## License\n\nMIT © [Kevin Mårtensson](http://kevinmartensson.com)\n",
    "licenseText": "MIT License\n\nCopyright (c) Kevin Mårtensson <kevinmartensson@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/bin-wrapper/-/bin-wrapper-4.1.0.tgz#99348f2cf85031e3ef7efce7e5300aeaae960605",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/bin-wrapper/-/bin-wrapper-4.1.0.tgz",
    "hash": "99348f2cf85031e3ef7efce7e5300aeaae960605",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "99348f2cf85031e3ef7efce7e5300aeaae960605"
}