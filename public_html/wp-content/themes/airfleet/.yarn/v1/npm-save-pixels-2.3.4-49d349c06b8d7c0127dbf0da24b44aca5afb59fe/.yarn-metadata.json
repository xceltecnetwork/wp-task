{
  "manifest": {
    "name": "save-pixels",
    "version": "2.3.4",
    "description": "Saves an ndarray as an image to a file",
    "main": "save-pixels.js",
    "dependencies": {
      "contentstream": "^1.0.0",
      "gif-encoder": "~0.4.1",
      "jpeg-js": "0.0.4",
      "ndarray": "^1.0.18",
      "ndarray-ops": "^1.2.2",
      "pngjs-nozlib": "^1.0.0",
      "through": "^2.3.4"
    },
    "devDependencies": {
      "get-pixels": "^3.0.1",
      "ndarray-scratch": "^1.1.1",
      "tape": "^3.0.1"
    },
    "scripts": {
      "test": "tap test/*.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/mikolalysenko/save-pixels.git"
    },
    "keywords": [
      "save",
      "pixel",
      "image",
      "png",
      "ndarray"
    ],
    "author": {
      "name": "Mikola Lysenko"
    },
    "license": "MIT",
    "readmeFilename": "README.md",
    "gitHead": "fda0977a1a5f2797d66f1557ffecc8c2dc759a47",
    "_registry": "npm",
    "_loc": ".yarn/v1/npm-save-pixels-2.3.4-49d349c06b8d7c0127dbf0da24b44aca5afb59fe/package.json",
    "readme": "save-pixels\n===========\nSaves an ndarray to an image.\n\nExample\n=======\n```javascript\nvar zeros = require(\"zeros\")\nvar savePixels = require(\"save-pixels\")\n\n//Create an image\nvar x = zeros([32, 32])\nx.set(16, 16, 255)\n\n//Save to a file\nsavePixels(x, \"png\").pipe(process.stdout)\n```\n\nThis writes the foll owing image to stdout:\n\n<img src=https://raw.github.com/mikolalysenko/save-pixels/master/example/example.png>\n\nInstall\n=======\n\n    npm install save-pixels\n\n### `require(\"save-pixels\")(array, type[, options])`\nSaves an ndarray as an image with the given format\n\n* `array` is an `ndarray` of pixels.  Assumes that shape is `[width, height, channels]`\n* `type` is the type of the image to save.  Currently supported formats:\n\n  + `\"jpeg\"`, `\"jpg\"` - Joint Photographic Experts Group format\n  + `\"gif\"` - Graphics Interchange Format\n  + `\"png\"` - Portable Network Graphics format\n  + `\"canvas\"` - A canvas element\n\n* `options` is an object that alters saving behavior\n\n  + `quality` is the `Number` to use for saved image quality\n\n    + This can only be used with a `\"jpeg\"` image\n    + It range between 1 (low quality) and 100 (high quality) inclusively\n\n**Returns** A stream that you can pipe to serialize the result, or a canvas element if the `type` is `\"canvas\"`.\n\n# Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
    "licenseText": "\nThe MIT License (MIT)\n\nCopyright (c) 2013 Mikola Lysenko\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/save-pixels/-/save-pixels-2.3.4.tgz#49d349c06b8d7c0127dbf0da24b44aca5afb59fe",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/save-pixels/-/save-pixels-2.3.4.tgz",
    "hash": "49d349c06b8d7c0127dbf0da24b44aca5afb59fe",
    "registry": "npm"
  },
  "registry": "npm",
  "hash": "49d349c06b8d7c0127dbf0da24b44aca5afb59fe"
}